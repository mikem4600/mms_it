/*
* ============================================================================
*  Name     : CMMS_ItContainer from MMS_ItContainer.h
*  Part of  : MMS_It
*  Created  : 29/9/2003 by Makidis Michael
*  Implementation notes:
*     Initial content was generated by Series 60 AppWizard.
*  Copyright: Makidis Michael 2003-2005
* ============================================================================
*/

// INCLUDE FILES
#include "MMS_ItContainer.h"
#include "MMS_ItAppUi.h"
#include <MMS_It.mbg> // for bitmap
#include <stringloader.h>  // for StringLoader
#include <MMS_IT.RSG>  // for accesing resources
#include "mms_it.hrh"  // for accesing commands

// ================= MEMBER FUNCTIONS =======================

CMMS_ItContainer::CMMS_ItContainer(CMMS_ItAppUi* aUI)
: iUI(aUI)
{}

// ---------------------------------------------------------
// CMMS_ItContainer::ConstructL(const TRect& aRect)
// EPOC two phased constructor
// ---------------------------------------------------------
//
void CMMS_ItContainer::ConstructL(const TRect& aRect)
    {
    CreateWindowL();

	SetRect(aRect);
	
	ActivateL();

	// load the bitmap
	_LIT(KTxtMBMname,"MMS_It.mbm");
	iBitmap = new (ELeave) CFbsBitmap();
	LoadBitmapL(iBitmap, KTxtMBMname, EMbmMms_itPic, ETrue);
    }

// Destructor
CMMS_ItContainer::~CMMS_ItContainer()
    {
	delete iBitmap;
    }

// ---------------------------------------------------------
// CMMS_ItContainer::SizeChanged()
// Called by framework when the view size is changed
// ---------------------------------------------------------
//
void CMMS_ItContainer::SizeChanged()
    {
    }

// ---------------------------------------------------------
// CMMS_ItContainer::CountComponentControls() const
// ---------------------------------------------------------
//
TInt CMMS_ItContainer::CountComponentControls() const
    {
    return 0;
    }

// ---------------------------------------------------------
// CMMS_ItContainer::ComponentControl(TInt aIndex) const
// ---------------------------------------------------------
//
CCoeControl* CMMS_ItContainer::ComponentControl(TInt /*aIndex*/) const
    {
		return NULL;
    }

// ---------------------------------------------------------
// CMMS_ItContainer::Draw(const TRect& aRect) const
// ---------------------------------------------------------
//
void CMMS_ItContainer::Draw(const TRect& /*aRect*/) const
    {
		CWindowGc& gc = SystemGc();
		gc.Clear();

		// Bitmap
		TRect rect(0,0,177,140);
		gc.DrawBitmap(rect, iBitmap);
    }

// ---------------------------------------------------------
// CMMS_ItContainer::HandleControlEventL(
//     CCoeControl* aControl,TCoeEvent aEventType)
// ---------------------------------------------------------
//
void CMMS_ItContainer::HandleControlEventL(
    CCoeControl* /*aControl*/,TCoeEvent /*aEventType*/)
    {
    // No need for control event handler code here
    }

// ---------------------------------------------------------
// CMMS_ItContainer::OfferKeyEventL(...)
// Notify key events to editors.
// ---------------------------------------------------------
//
TKeyResponse CMMS_ItContainer::OfferKeyEventL(
    const TKeyEvent& aKeyEvent, TEventCode /*aType*/)
    {
        switch ( aKeyEvent.iCode )
        {
		case EKeyOK:
		case EKeyEnter:
			{
			iUI->HandleCommandL( ENewMessage );
			return EKeyWasConsumed;
			}
        default:
			{
			return EKeyWasNotConsumed;
            break;
			}
        }
    }

// based on a Forum Nokia Discussion topic
void CMMS_ItContainer::LoadBitmapL(CFbsBitmap* aBitMap,const TDesC& aFileName,TInt aId,TBool aShareIfLoaded)
	{
	TFileName DefaultPath;

	// This gives complete path name to the application
	DefaultPath.Copy(CEikonEnv::Static()->EikAppUi()->Application()->AppFullName());

	// now parse and strip of the application name
	TParsePtr parse(DefaultPath);

	// Copy back only drive and path
	DefaultPath.Copy(parse.DriveAndPath()); 

	// Append the filename
	DefaultPath.Append(aFileName);

	User::LeaveIfError(aBitMap->Load(DefaultPath, aId, aShareIfLoaded));
	}

// End of File  
